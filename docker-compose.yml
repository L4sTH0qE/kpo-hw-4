version: "3.9"
services:
  regService:
    image: registration-service
    container_name: regService
    expose:
      - "8080"
    ports:
      - "8080:8080"
    networks:
      - myNetwork
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=12345678
      - DB_URL=jdbc:postgresql://regDb:5432/registration-service
    depends_on:
      - regDb
  regDb:
    image: postgres:13.3
    container_name: regDb
    expose:
      - "5432"
    ports:
      - "5432:5432"
    networks:
      - myNetwork
    environment:
      POSTGRES_DB: "registration-service"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345678"
    volumes:
      - .:/docker-entrypoint-initdb.d
  tickService:
    image: ticket-service
    container_name: tickService
    expose:
      - "8081"
    ports:
      - "8081:8081"
    networks:
      - myNetwork
    environment:
      - DB_USERNAME=postgres
      - DB_PASSWORD=12345678
      - DB_URL=jdbc:postgresql://tickDb:5432/ticket-service
    depends_on:
      - tickDb
  tickDb:
    image: postgres:13.3
    container_name: tickDb
    expose:
      - "5433"
    ports:
      - "5433:5432"
    networks:
      - myNetwork
    environment:
      POSTGRES_DB: "ticket-service"
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "12345678"
    volumes:
      - .:/docker-entrypoint-initdb.d
networks:
  myNetwork:
    driver: bridge
